generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Client {
  id                String              @id @default(cuid())
  name              String
  email             String
  invitationEmailId String?             @ignore
  invitationPage    InvitationPageEnum? @default(DEFAULT)
  // EmailTemplateDetailsId Int?
  // EmailTemplateDetails   EmailTemplateDetails? @relation(fields: [EmailTemplateDetailsId], references: [id])
  guests            Guest[]
  wishes            Wish[]
  settings          Json?               @db.Json
}

model EmailTemplateDetails {
  id                Int     @id @default(autoincrement())
  mediaEmailId      String?
  invitationEmailId String?
  // Client            Client[]
}

model Guest {
  id           String      @id @default(cuid())
  name         String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt @ignore
  clientId     String?
  extraPerson1 String?
  status       GuestStatus @default(NEW)
  email        String
  client       Client?     @relation(fields: [clientId], references: [id])
  sendMedia    Boolean?
}

model Wish {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  text      String
  name      String
  clientId  String?
  client    Client?  @relation(fields: [clientId], references: [id])
}

model Admin {
  id    String  @id @default(cuid())
  email String  @unique
  name  String
  hash  String?
}

enum InvitationPageEnum {
  DEFAULT
  JULIETPAGE
}

enum GuestStatus {
  NEW
  EDITED
  REJECTED
}
